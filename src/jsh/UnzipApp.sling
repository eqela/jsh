
/*
 * This file is part of Eqela JSH
 * Copyright (c) 2018-2020 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

import jk.fs
import jk.log
import jk.console
import jk.util.archive

class is ConsoleApplicationMain:

var file as File
var output as File

func initialize override as bool
{
	foreach arg in args {
		if arg.isParameter() {
			assert file == null:
				Log.error(ctx, "Too many parameters")
			file = File.forPath(arg.parameter)
		}
		else if arg.isOption("output") {
			output = File.forPath(arg.getStringValue())
		}
		else {
			arg.reportAsUnsupported(ctx)
			return false
		}
	}
	return true
}

func execute override as bool
{
	assert file:
		Log.error(ctx, "No zip file provided.")
	assert output:
		Log.error(ctx, "No output directory specified.")
	assert not output.exists():
		Log.error(ctx, "Output path already exists: `" .. output.getPath() .. "'")
	var r = ZipReader.extractZipFileToDirectory(file, output, func(file as File) {
		Log.status(ctx, file.getPath())
	})
	assert r:
		Log.error(ctx, "Failed to extract zip: `" .. file.getPath() .. "'")
	return true
}
