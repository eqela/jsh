
/*
 * This file is part of Eqela JSH
 * Copyright (c) 2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is ConsoleApplicationMain:

import capex.console
import capex.util

var target as File

func initialize override as bool
{
	foreach arg in args {
		if arg.isParameter() {
			assert target == null:
				Log.error(ctx, "Too many parameters")
			target = File.forPath(arg.parameter)
		}
		else {
			arg.reportAsUnsupported(ctx)
			return false
		}
	}
	return true
}

func execute override as bool
{
	assert target:
		Log.error(ctx, "No target provided.")
	if target.exists() == false:
		return true
	if target.isDirectory() {
		assert target.removeRecursive():
			Log.error(ctx, "Failed to remove directory: `" .. target.getPath() .. "': " .. target.getLastErrorDescription())
	}
	else {
		assert target.remove():
			Log.error(ctx, "Failed to remove: `" .. target.getPath() .. "': " .. target.getLastErrorDescription())
	}
	return true
}
