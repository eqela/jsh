
/*
 * This file is part of Eqela JSH
 * Copyright (c) 2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is ConsoleApplicationMain:

import capex.console

func asBool(v as int) private as bool:
	return v == 0

func execute override as bool
{
	var cmd as string
	var nargs = new vector<string>
	foreach arg in args {
		if not cmd {
			cmd = arg.arg
		}
		else {
			nargs += arg.arg
		}
	}
	assert String.isNotEmpty(cmd):
		Log.error(ctx, "No command supplied")
	if cmd == "cpto":
		return asBool(new CptoApp().executeWithArgumentVector(nargs))
	if cmd == "delete":
		return asBool(new DeleteApp().executeWithArgumentVector(nargs))
	if cmd == "filemod":
		return asBool(new FilemodApp().executeWithArgumentVector(nargs))
	if cmd == "hexdump":
		return asBool(new HexdumpApp().executeWithArgumentVector(nargs))
	if cmd == "makepkq":
		return asBool(new MakepkqApp().executeWithArgumentVector(nargs))
	if cmd == "zipdir":
		return asBool(new ZipdirApp().executeWithArgumentVector(nargs))
	if cmd == "tardir":
		return asBool(new TardirApp().executeWithArgumentVector(nargs))
	Log.error(ctx, "Unsupported command: `" .. cmd .. "'")
	return false
}

main:
	return executeMain(new this(), args)
